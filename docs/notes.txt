Goal:
Do edge detection on OV7670 video stream.

Intermediate Goal: 
-> Buffer camera video data in external memory
-> Read video data from external memory 
-> Display video data via VGA 


    1) button debounce module
        - verilog testbench

    2) VGA driver
        - formal
        - verilog testbench

    3) independent clock FIFO
        - formal
        - systemverilog testbench

    4) memory interface
        
    5) i2c module
        - formal
        
    6) system state machine
        - formal
        - systemverilog testbench

///////////////////////////////////////////////
Log:


9/3:
- 

9/2: 
- found a bug in async fifo where the wrong inequality was used for computing
  fill level

- found a bug in async fifo where binary to graycode conversion fails for 
  wbinnext = 0x1000. Yielding 0x1800 instead of expected 0x0800. Critical bug!!
  Need to find a fix still. Highest priority.
      -> 9/3 UPDATE: stupid typo in conversion. kinda emb

- adjusted testbench to match real timings

8/31:
- implemented a self-checking testbench for the capture module. 

- found a bug in the capture module. Incorrect default statement for the FIFO write control signal
  caused consecutive writes of the same data. 

- found a bug in the memory interface. The memory interface logic reads continuously from the camera FIFO 
  unless the empty flag is asserted. There's a one-cycle delay on the read being deasserted, resulting in
  invalid data being read.
        -> the solution: implemented programmable almost-empty flag on the FIFO. The read-domain 
                         synchronized write pointer (double ff) is converted to binary and used to compute
                         a fill level, which in turn is used to control the empty flag. Did the same on the
                         write side, with a full flag.
    